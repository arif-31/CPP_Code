#include<bits/stdc++.h>
using namespace std;
int array[500]= {0};
int p[] = { 2, 3, 5, 7,  11,  13,  17,  19,  23,  29
			,  31,  37,  41,  43,  47,  53,  59,  61,  67,  71
			,  73,  79,  83,  89,  97, 101, 103, 107, 109, 113
			, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173
			, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229
			, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281
			, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349
			, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409
			, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463
			, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541
			, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601
			, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659
			, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733
			, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809
			, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863
			, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941
			, 947, 953, 967, 971, 977, 983, 991, 997,1009
		  };
//int initialize(int array[])
//{
//	int d=0;
////	int array[];
//	for(int i=2; i<=1500; i++) {
//		int f=0;
//		for(int j=2; j<i; j++) {
//			if(i%j==0) {
//				f=1;
//				break;
//			}
//		}
//		if(!f) {
//			++d;
//			array[d]=i;
//			//cout<<i<<" "<<endl;
//		}
//	}
//	//cout<<d<<endl;
//}
void solve()
{
	int s,t;
	cin>>s>>t;
	queue<pair<int,int> > q;
	q.push(make_pair(s,0));
	vector<int>vec(t+15);
	while(!q.empty()) {
		int ff=q.front().first;
		int fs=q.front().second;
		vec[ff]=true;
		q.pop();

		if(ff==t) {
			printf("%d\n",fs);
			return;
		}
		else if(ff<t) {
			for(int i=0;p[i] < ff  ; ++i) {
//				if(p[i] <= ff)
//					break;
				if((ff%p[i])==0 && (ff+p[i]<=t) && (!vec[ff+p[i]])) {
					q.push(make_pair(ff+p[i],fs+1));
				}
			}
		}

	}
	puts("-1");

}
int main()
{
//	int array[500];
	//initialize(array);
	int test;
	cin>>test;
	for(int t=1; t<=test; t++) {
		cout<<"Case "<<t<<": ";
		solve();
	}

}
